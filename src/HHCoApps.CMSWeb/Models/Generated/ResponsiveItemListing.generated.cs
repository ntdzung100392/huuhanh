//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder.Embedded v8.8.0
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder.Embedded;

namespace Umbraco.Web.PublishedModels
{
	/// <summary>Listing Component</summary>
	[PublishedModel("responsiveItemListing")]
	public partial class ResponsiveItemListing : PublishedElementModel
	{
		// helpers
#pragma warning disable 0109 // new is redundant
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		public new const string ModelTypeAlias = "responsiveItemListing";
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		public new static IPublishedContentType GetModelContentType()
			=> PublishedModelUtility.GetModelContentType(ModelItemType, ModelTypeAlias);
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		public static IPublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ResponsiveItemListing, TValue>> selector)
			=> PublishedModelUtility.GetModelPropertyType(GetModelContentType(), selector);
#pragma warning restore 0109

		// ctor
		public ResponsiveItemListing(IPublishedElement content)
			: base(content)
		{ }

		// properties

		///<summary>
		/// Additional Items: Select the list of the additional node that contains all the additional pages which will be displayed on the listing.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("additionalItems")]
		public global::System.Collections.Generic.IEnumerable<global::Umbraco.Core.Models.PublishedContent.IPublishedContent> AdditionalItems => this.Value<global::System.Collections.Generic.IEnumerable<global::Umbraco.Core.Models.PublishedContent.IPublishedContent>>("additionalItems");

		///<summary>
		/// Default Filters: Add/Update/Delete the list of filter to filter out the displayed items on list.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("defaultFilters")]
		public global::System.Collections.Generic.IEnumerable<global::Umbraco.Web.PublishedModels.FilterTypeValueOptions> DefaultFilters => this.Value<global::System.Collections.Generic.IEnumerable<global::Umbraco.Web.PublishedModels.FilterTypeValueOptions>>("defaultFilters");

		///<summary>
		/// Enable Filter: Turn on to enable filter on the listing.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("enableFilter")]
		public bool EnableFilter => this.Value<bool>("enableFilter");

		///<summary>
		/// Filtering By: Display the list of available where the editor can select to enable the filter type on the list.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("filteringBy")]
		public global::System.Collections.Generic.IEnumerable<string> FilteringBy => this.Value<global::System.Collections.Generic.IEnumerable<string>>("filteringBy");

		///<summary>
		/// Select Filter Order Configuration: Select the order of displayed filters on the list.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("filteringConfiguration")]
		public global::Umbraco.Core.Models.PublishedContent.IPublishedContent FilteringConfiguration => this.Value<global::Umbraco.Core.Models.PublishedContent.IPublishedContent>("filteringConfiguration");

		///<summary>
		/// Number of Columns: In case selected option is blank, default will be 2 Columns.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("layoutPicker")]
		public string LayoutPicker => this.Value<string>("layoutPicker");

		///<summary>
		/// Number Items per Page: Default will be 9.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("numberItemsPerPage")]
		public int NumberItemsPerPage => this.Value<int>("numberItemsPerPage");

		///<summary>
		/// Sort Order: Ascending and Descending. In case selected option is blank, default will be Ascending.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("sortOrderBy")]
		public string SortOrderBy => this.Value<string>("sortOrderBy");

		///<summary>
		/// Sort Type: Define sorting by Blank, Title, Last Modified Date, Created Date. In case selected option is Blank,  Node Order will be in charged.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("sortType")]
		public string SortType => this.Value<string>("sortType");

		///<summary>
		/// Starter Node: Select the node that contains all the page which will be displayed on the listing.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("starterNode")]
		public global::Umbraco.Core.Models.PublishedContent.IPublishedContent StarterNode => this.Value<global::Umbraco.Core.Models.PublishedContent.IPublishedContent>("starterNode");

		///<summary>
		/// View Details Label: Input the label of view details button.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("viewDetailsLabel")]
		public string ViewDetailsLabel => this.Value<string>("viewDetailsLabel");

		///<summary>
		/// View More Label: Input the label of load more button.
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Umbraco.ModelsBuilder.Embedded", "8.8.0")]
		[ImplementPropertyType("viewMoreLabel")]
		public string ViewMoreLabel => this.Value<string>("viewMoreLabel");
	}
}
