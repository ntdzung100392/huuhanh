@using HHCoApps.CMSWeb.Services
@using HHCoApps.CMSWeb.Models.Enums;
@using Umbraco.Core.Composing
@inherits UmbracoViewPage<NavigationAndBreadcrumbComponent>
@{
    var currentModel = Umbraco.AssignedContentItem;
    var inDepthLevel = Model.InDepthLevel ?? "Level 1";
    var isLevel2 = NavigationSource.Level2.DisplayName.Equals(inDepthLevel, StringComparison.OrdinalIgnoreCase);
    var viewModels = Current.Factory.GetInstance<INavigationService>().GetViewModel(Model, currentModel, isLevel2);
    var enableNavigation = Model.EnableNavigation;
    var enableBreadcrumb = Model.EnableBreadcrumb;
}

@if (enableBreadcrumb && viewModels.BreadcrumbNodes.Any())
{
    @Html.Partial("~/Views/Partials/Breadcrumb.cshtml", viewModels.BreadcrumbNodes)
}

@if (enableNavigation)
{
    var idLevel1 = Guid.NewGuid();

    <section class="product-list__filter">
        <div class="container visible-md visible-lg hidden-xs hidden-sm px-0">
            <div class="row mx-0">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <ul class="nav nav-tabs">
                        <li>
                            <a href="@(viewModels.NavigationNodes.FirstOrDefault()?.Url ?? string.Empty)" class="prev-link">
                                <img src="~/assets/images/icons/icon-arrow-dark-prev-circle-yellow.png" alt="prev" />
                            </a>
                        </li>
                        @foreach (var parentContent in viewModels.NavigationNodes)
                        {
                            <li class="@(parentContent.IsActive ? "active" : string.Empty)">
                                <a class="text-uppercase" href="@parentContent.Url">@parentContent.Title</a>
                            </li>
                        }
                    </ul>
                    @if (isLevel2)
                    {
                        <div class="tab-content">
                            @foreach (var parentContent in viewModels.NavigationNodes)
                            {
                                <div class="tab-pane fade @(parentContent.IsActive ? "active in" : string.Empty)">
                                    <ul class="product-list__filter-menu col-xs-11 col-sm-11 col-md-11 col-lg-11">
                                        @if (parentContent.ChildNodes.Any())
                                        {
                                            foreach (var childContent in parentContent.ChildNodes)
                                            {
                                                <li class="text-center"><a href="@childContent.Url" class="text-uppercase @(childContent.IsActive ? "active" : string.Empty)">@childContent.Title</a></li>
                                            }
                                        }
                                    </ul>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="container visible-xs visible-sm hidden-lg hidden-md">
            <div class="panel-group">
                <div class="panel">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a class="text-uppercase" data-toggle="collapse" data-target="#@idLevel1">
                                @if (viewModels.NavigationNodes.Any())
                                {
                                    <strong>All @viewModels.Title</strong>
                                }
                            </a>
                        </h4>
                    </div>
                    <div id="@idLevel1" class="panel-collapse collapse">
                        <div class="panel-body">
                            <ul>
                                @foreach (var parentContent in viewModels.NavigationNodes)
                                {
                                    <li class="@(parentContent.IsActive ? "active" : string.Empty)">
                                        <a href="@parentContent.Url" class="text-capitalize">@(parentContent?.Title ?? string.Empty)</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
                <div id="accordion">
                    @if (isLevel2)
                    {
                        foreach (var parentContent in viewModels.NavigationNodes)
                        {
                            if (parentContent.IsActive && parentContent.ChildNodes.Any())
                            {
                                <div class="panel">
                                    <div class="panel-heading">
                                        <h4 class="panel-title">
                                            <a class="text-uppercase" data-toggle="collapse" data-target="#@parentContent.Id"><strong>@parentContent.Title</strong></a>
                                        </h4>
                                    </div>
                                    <div id="@parentContent.Id" class="panel-collapse collapse">
                                        <div class="panel-body">
                                            <ul>
                                                @if (parentContent.ChildNodes.Any())
                                                {
                                                    foreach (var childContent in parentContent.ChildNodes)
                                                    {
                                                        <li class="@(childContent.IsActive ? "active" : string.Empty)">
                                                            <a href="@childContent.Url" class="text-capitalize">@(childContent.Title ?? string.Empty)</a>
                                                        </li>
                                                    }
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </section>
}